% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/netest_par.R
\name{netest_par}
\alias{netest_par}
\title{Dynamic Network Model Estimation in Parallel}
\usage{
netest_par(
  nw,
  formation,
  target.stats,
  coef.diss,
  constraints,
  coef.form = NULL,
  edapprox = TRUE,
  set.control.ergm,
  set.control.stergm,
  ncores
)
}
\arguments{
\item{nw}{An object of class \code{network}.}

\item{formation}{Right-hand sided STERGM formation formula in the form
\code{~edges + ...}, where \code{...} are additional network statistics.}

\item{target.stats}{Vector of target statistics for the formation model, with
one number for each network statistic in the model.}

\item{coef.diss}{An object of class \code{disscoef} output from the
\code{\link[EpiModel]{dissolution_coefs}} function.}

\item{constraints}{Right-hand sided formula specifying constraints for the
modeled network, in the form \code{~...}, where \code{...} are constraint
terms. By default, no constraints are set.}

\item{coef.form}{Vector of coefficients for the offset terms in the formation
formula.}

\item{edapprox}{If \code{TRUE}, use the indirect edges dissolution approximation
method for the dynamic model fit, otherwise use the more time-intensive
full STERGM estimation (see details).}

\item{set.control.ergm}{Control arguments passed to \code{simulate.ergm} (see
details).}

\item{set.control.stergm}{Control arguments passed to \code{simulate.stergm} (see
details).}

\item{ncores}{Number of processor cores to run multiple simulations
on, using the \code{foreach} and \code{doParallel} implementations.}
}
\description{
Estimates statistical network models using the exponential
             random graph modeling (ERGM) framework with extensions for
             dynamic/temporal models (STERGM) in parallel.
}
\details{
Fits multiple temporal ERGMs in paralell by wrapping the
\code{EpiModel::netest} function. Allows for either \code{coef.diss} or
\code{target.stats} to be a list, each element of which would be an object of
class \code{disscoef} or a numeric vector, respectively.
}
\examples{
\dontrun{
## Multiple coef.diss elements
nw <- network.initialize(n = 100, directed = FALSE)
formation <- ~edges + concurrent
target.stats <- c(50, 25)
coef.diss <- list(dissolution_coefs(dissolution = ~offset(edges), duration = 10),
                  dissolution_coefs(dissolution = ~offset(edges), duration = 20))
est <- netest_par(nw, formation, target.stats, coef.diss, ncores = 2)
est

## Multiple target.stats elements
nw <- network.initialize(n = 100, directed = FALSE)
formation <- ~edges + concurrent
target.stats <- list(c(50, 25),
                     c(50, 20))
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 10)
est <- netest_par(nw, formation, target.stats, coef.diss, ncores = 2)
est
}

}
