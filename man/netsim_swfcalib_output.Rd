% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/swfcalib_helpers.R
\name{netsim_swfcalib_output}
\alias{netsim_swfcalib_output}
\title{Function to run an EpiModel sim with the result of an \code{swfcalib} calibration}
\usage{
netsim_swfcalib_output(
  path_to_x,
  param,
  init,
  control,
  calib_object,
  n_rep,
  n_cores,
  output_dir,
  libraries = NULL
)
}
\arguments{
\item{path_to_x}{Path to a Fitted network model object saved with \code{saveRDS}.
(See the \code{x} argument to the \code{EpiModel::netsim} function)}

\item{param}{Model parameters, as an object of class \code{param.net}.}

\item{init}{Initial conditions, as an object of class \code{init.net}.}

\item{control}{Control settings, as an object of class
\code{control.net}.}

\item{calib_object}{a formatted calibration object}

\item{n_rep}{The number of replication to be run for each scenario.}

\item{n_cores}{The number of CPUs on which the simulations will be run.}

\item{output_dir}{The folder where the simulation files are to be stored.}

\item{libraries}{A character vector containing the name of the libraries
required for the model to run. (e.g. EpiModelHIV or EpiModelCOVID)}
}
\value{
a template function to be used by \code{add_workflow_step}
}
\description{
Function to run an EpiModel sim with the result of an \code{swfcalib} calibration
}
\section{Checkpointing}{

This function takes care of editing \code{.checkpoint.dir} to create unique sub
directories for each scenario. The \code{EpiModel::control.net} way of setting up
checkpoints can be used transparently.
}

\section{Step Template}{


Step Templates are helper functions to be used within \code{add_workflow_step}.
Some basic ones are provided by the \code{slurmworkflow} package. They instruct
the workflow to run either a bash script, a set of bash lines given as a
character vector or an R script.
Additional Step Templates can be created to simplify specific tasks. The
easiest way to do so is as wrappers around existing templates.

}

