% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/netsim_hpc.R
\name{netsim_hpc}
\alias{netsim_hpc}
\title{Stochastic Network Models on High-Performance Computing Systems}
\usage{
netsim_hpc(
  x,
  param,
  init,
  control,
  cp.save.int = NULL,
  save.min = TRUE,
  save.max = FALSE,
  compress = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{x}{Character vector containing the file path of an Rdata
file where an object of class \code{netest} is stored. Alternatively,
if restarting a previous simulation, this may be a file path for an
object of class \code{netsim}.}

\item{param}{Model parameters, as an object of class \code{param.net}.}

\item{init}{Initial conditions, as an object of class \code{init.net}.}

\item{control}{Control settings, as an object of class \code{control.net}.}

\item{cp.save.int}{Check-pointing save interval, which is used to specify how
often intermediate data should be saved out to disk. When a job has been
check-pointed, it will resume automatically at the last saved time 
step stored on disk. If set to \code{NULL}, then no intermediate data
storage will occur.}

\item{save.min}{Argument passed to \code{\link{savesim}}.}

\item{save.max}{Argument passed to \code{\link{savesim}}.}

\item{compress}{Matches the \code{compress} argument for the \code{\link{save}}
function.}

\item{verbose}{If \code{FALSE}, suppress all output messages except errors.}
}
\description{
Simulates stochastic network epidemic models for infectious
             disease dynamics in parallel.
}
\details{
This function provides a systematic method to running stochastic network
models in parallel on high-performance computing systems.

The main purpose of using \code{netsim_hpc} is for a standardized checkpointing
method. Checkpointing is defined as incrementally saving simulation data for
the purpose of reloading it if a simulation job is canceled and restarted. If
checkpointing is not needed, users are advised to run their models directly
with the \code{EpiModel::netsim} function.

This function performs the following tasks:
\enumerate{
  \item Check for the existence of checkpointed data, using the
        \code{\link{check_cp}} function. If CP data are available, a
        checkpointed model will be run, else a new model will be run.
  \item Create a checkpoint directory if one does not exist at
        "data/sim<simno>". This and the related checkpointing functions will 
        not occur if \code{cp.save.int} is set to \code{NULL}.
  \item Sets the checkpoint save interval at the number of time steps specified
        in \code{cp.save.int}.
  \item Resets the initialize module function to \code{\link{initialize_cp}}
        if in checkpoint state.
  \item Run the simulation, either new or checkpointed, with a call to
        \code{EpiModel::netsim}.
  \item Save the completed simulation data, using the functionality of
        \code{\link{savesim}}.
  \item Remove the checkpointed data and file directory created in step 1, if
        it exists.
}

The \code{x} argument must specify a \strong{file name} in a character string,
rather than a \code{netest} or \code{netsim} class object directly. This is
mainly for efficency purposes in running the models in parallel.

If \code{save.min} and \code{save.max} are both set to \code{FALSE}, then the
function will return rather than save the output EpiModel object.
}
